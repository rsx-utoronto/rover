<?xml version="1.0"?>
<launch>
    <arg name="zed_namespace"		    	default="zed" />

    <arg name="svo_file"              	default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->

    <arg name="camera_model"         	default="0" /> <!-- 0=ZED, 1=ZEDM-->
    <arg name="serial_number"        	default="0" />
    <arg name="verbose"              	default="true" />
    <arg name="resolution"           	default="2" /> <!--0=RESOLUTION_HD2K, 1=RESOLUTION_HD1080, 2=RESOLUTION_HD720, 3=RESOLUTION_VGA -->
    <arg name="frame_rate"           	default="30" />
    <!-- RESOLUTION_HD2K   -> 2208*1242, available framerates: 15 fps.
       RESOLUTION_HD1080 -> 1920*1080, available framerates: 15, 30 fps.
       RESOLUTION_HD720  -> 1280*720,  available framerates: 15, 30, 60 fps.
       RESOLUTION_VGA    -> 672*376,   available framerates: 15, 30, 60, 100 fps. -->

    <arg name="rgb_topic"               	default="rgb/image_rect_color" />
    <arg name="depth_topic"             	default="depth/depth_registered" />
    <arg name="camera_info_topic"       	default="rgb/camera_info" />
    <arg name="depth_camera_info_topic" 	default="depth/camera_info" />
    <arg name="camera_frame"                default="zed_camera_center" />

    <arg name="left_camera_frame"           default="zed_left_camera_frame" />
    <arg name="nodelet_manager_name"        default="zed_nodelet_manager" />

    <group ns="$(arg zed_namespace)">
        <!-- Nodelet Manager -->
        <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)"  args="manager" output="screen" />

        <!-- ZED Wrapper Node-->
        <include file="$(find zed_wrapper)/launch/zed_camera.launch">
			<arg name="svo_file"            	value="$(arg svo_file)" />
			<arg name="camera_model"        	value="$(arg camera_model)" />
			<arg name="serial_number"       	value="$(arg serial_number)" />
			<arg name="resolution"          	value="$(arg resolution)" />
			<arg name="frame_rate"          	value="$(arg frame_rate)" />
			<arg name="verbose"             	value="$(arg verbose)" />

			<arg name="rgb_topic"                 value="$(arg rgb_topic)" />
			<arg name="depth_topic"               value="$(arg depth_topic)" />
			<arg name="rgb_info_topic"       	value="$(arg camera_info_topic)" />
			<arg name="depth_cam_info_topic" 	value="$(arg depth_camera_info_topic)" />
			<arg name="base_frame"                value="$(arg camera_frame)" />

			<arg name="publish_map_tf"            value="false" />
        </include>

        <!-- Virtual laser scan as nodelet -->
        <!-- "$ sudo apt install ros-kinetic-depthimage-to-laserscan" -->
        <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet zed_nodelet_manager">
             <param name="scan_height" value="10"/>
             <param name="output_frame_id" value="$(arg left_camera_frame)"/>
             <param name="range_min" value="0.45"/>
             <remap from="image" to="$(arg depth_topic)"/>
        </node>
    </group>
    
    <!-- RTAB-map Node-->
    <!-- SLAM -->
    <group ns="rtabmap">
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
            <param name="frame_id" type="string" value="$(arg camera_frame)"/>

            <param name="subscribe_depth" type="bool" value="true"/>
            <param name="subscribe_scan" type="bool" value="true"/>

            <remap from="odom" to="/$(arg zed_namespace)/odom"/>
            <remap from="scan" to="/zed/scan"/>

            <remap from="rgb/image"       to="/$(arg zed_namespace)/$(arg rgb_topic)"/>
            <remap from="depth/image"     to="/$(arg zed_namespace)/$(arg depth_topic)"/>
            <remap from="rgb/camera_info" to="/$(arg zed_namespace)/$(arg camera_info_topic)" />

            <param name="queue_size" type="int" value="10"/>

            <param name="RGBD/ProximityBySpace"     type="string" value="false"/>
            <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
            <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
            <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
            <param name="Reg/Force3DoF"             type="string" value="true"/>
            <param name="Vis/MinInliers"            type="string" value="12"/>
        </node>
    </group>

    <group ns="planner">
        <!--remap from="openni_points" to="/rtabmap/cloud_map"/-->
        
    
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
            <rosparam file="$(find rover)/launch/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
            <rosparam file="$(find rover)/launch/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
            <rosparam file="$(find rover)/launch/config/local_costmap_params.yaml" command="load" />
            <rosparam file="$(find rover)/launch/config/global_costmap_params.yaml" command="load" />
            <rosparam file="$(find rover)/launch/config/base_local_planner_params.yaml" command="load" />
            <remap from="map" to="/rtabmap/grid_map"/>
            <remap from="odom" to="/rtabmap/odom"/>
            <remap from="scan" to="/zed/scan"/>
            <remap from="move_base_simple/goal" to="/planner_goal"/>
        </node>
	</group>
</launch>